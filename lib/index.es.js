import path from"path";import fs from"fs";import qiniu from"qiniu";import ora from"ora";const tip=(e,t,o,i)=>`${i?"重试失败的文件:":"七牛云上传中:"} 已上传 ${Math.round(e/o*100)}% ${e}/${o} ， ${t} 个文件上传失败`;class QiniuPlugin{constructor(e){this.options=e}uploadFiles(){let e=this.options.assets,t=this.options.exclude,o=this.options.include,i=this.options.batch||20,n=this.options.maxRetryTimes||3,s=new qiniu.auth.digest.Mac(this.options.accessKey,this.options.secretKey),l=new qiniu.conf.Config,r=this.options.bucket,c=qiniu.zone[this.options.zone];c&&(l.zone=c);let u=this.options.path,a=Object.keys(e),p=0,h=0,f=[],g=0,_finish=e=>{m.succeed(),console.log("\n")};a=a.filter((e=>(!t||!t.test(e))&&(!o||o.test(e)))),p=a.length,console.log("\n");let m=ora({text:tip(0,f.length,p,!1),color:"green"}).start();const performUpload=function(t,o){let i=e[t]||{},n=path.posix.join(u,t),c=new qiniu.rs.PutPolicy({scope:r+":"+n}).uploadToken(s),a=new qiniu.form_up.FormUploader(l),g=new qiniu.form_up.PutExtra;return new Promise((e=>{let s=Date.now();a.putFile(c,n,i.existsAt,g,(function(i,n){i?(console.log(`上传文件 ${t} 失败: ${i.message||i.name||i.stack}`),~f.indexOf(t)||f.push(t)):h++,m.text=tip(h,f.length,p,o),n.duration=Date.now()-s,e(n)}))}))},retryFailedFiles=function(e){if(e)return console.log("\n"),Promise.reject(e);g<0&&(g=0);let t=f.splice(0,i<=g?i:g);return g-=t.length,t.length?Promise.all(t.map((e=>performUpload(e,!0)))).then((()=>retryFailedFiles()),retryFailedFiles):f.length?Promise.reject(new Error("文件上传失败")):Promise.resolve()},execStack=function(e){if(e)return console.log("\n"),Promise.reject(e);let t=a.splice(0,i);return t.length?Promise.all(t.map((e=>performUpload(e,!1)))).then((()=>execStack()),execStack):Promise.resolve()};execStack().then((()=>(g=f.length*n,retryFailedFiles()))).then((()=>_finish()),_finish)}}const defaultOptions={enable:!0,accessKey:"",secretKey:"",bucket:"",path:"/",zone:"",exclude:/index\.html$/,root:"/"};function getFilePaths(e,t=e){return fs.readdirSync(e).map((o=>{const i=`${e}/${o}`,n=fs.lstatSync(i);return n.isDirectory()?getFilePaths(i,t):n.isFile()?{name:t?i.replace(`${t}/`,""):o,existsAt:i}:void 0})).flat()}function vitePluginQiniuCDN(e){const t=Object.assign({},defaultOptions,e);return{name:"vite-plugin-qiniu",enforce:"post",apply:"build",configResolved(e){const o=path.resolve(e.root,e.build.outDir);t.sourceFilesDir=t.sourceFilesDir||o;["accessKey","secretKey","bucket","path"].forEach((e=>{t[e]||(console.log(` 插件 参数${e} 必须填写`),t.enable=!1)}))},closeBundle(){if(t.enable){let e=getFilePaths(t.sourceFilesDir),o={};e.forEach((e=>{o[e.name]=e})),new QiniuPlugin(Object.assign(Object.assign({},t),{assets:o})).uploadFiles()}else console.log("已禁用 可设置enable: true 开启")}}}export{vitePluginQiniuCDN as default};
//# sourceMappingURL=index.es.js.map
