var e=require("path"),t=require("fs"),o=require("qiniu"),n=require("ora");const tip=(e,t,o,n)=>`${n?"重试失败的文件:":"七牛云上传中:"} 已上传 ${Math.round(e/o*100)}% ${e}/${o} ， ${t} 个文件上传失败`;class QiniuPlugin{constructor(e){this.options=e}uploadFiles(){let t=this.options.assets,s=this.options.exclude,i=this.options.include,l=this.options.batch||20,r=this.options.maxRetryTimes||3,c=new o.auth.digest.Mac(this.options.accessKey,this.options.secretKey),u=new o.conf.Config,a=this.options.bucket,h=o.zone[this.options.zone];h&&(u.zone=h);let p=this.options.path,g=Object.keys(t),m=0,d=0,f=[],P=0,_finish=e=>{b.succeed(),console.log("\n")};g=g.filter((e=>(!s||!s.test(e))&&(!i||i.test(e)))),m=g.length,console.log("\n");let b=n({text:tip(0,f.length,m,!1),color:"green"}).start();const performUpload=function(n,s){let i=t[n]||{},l=e.posix.join(p,n),r=new o.rs.PutPolicy({scope:a+":"+l}).uploadToken(c),h=new o.form_up.FormUploader(u),g=new o.form_up.PutExtra;return new Promise((e=>{let t=Date.now();h.putFile(r,l,i.existsAt,g,(function(o,i){o?(console.log(`上传文件 ${n} 失败: ${o.message||o.name||o.stack}`),~f.indexOf(n)||f.push(n)):d++,b.text=tip(d,f.length,m,s),i.duration=Date.now()-t,e(i)}))}))},retryFailedFiles=function(e){if(e)return console.log("\n"),Promise.reject(e);P<0&&(P=0);let t=f.splice(0,l<=P?l:P);return P-=t.length,t.length?Promise.all(t.map((e=>performUpload(e,!0)))).then((()=>retryFailedFiles()),retryFailedFiles):f.length?Promise.reject(new Error("文件上传失败")):Promise.resolve()},execStack=function(e){if(e)return console.log("\n"),Promise.reject(e);let t=g.splice(0,l);return t.length?Promise.all(t.map((e=>performUpload(e,!1)))).then((()=>execStack()),execStack):Promise.resolve()};execStack().then((()=>(P=f.length*r,retryFailedFiles()))).then((()=>_finish()),_finish)}}const s={enable:!0,accessKey:"",secretKey:"",bucket:"",path:"/",zone:"",exclude:/index\.html$/,root:"/"};function getFilePaths(e,o=e){return t.readdirSync(e).map((n=>{const s=`${e}/${n}`,i=t.lstatSync(s);return i.isDirectory()?getFilePaths(s,o):i.isFile()?{name:o?s.replace(`${o}/`,""):n,existsAt:s}:void 0})).flat()}module.exports=function vitePluginQiniuCDN(t){const o=Object.assign({},s,t);return{name:"vite-plugin-qiniu",enforce:"post",apply:"build",configResolved(t){const n=e.resolve(t.root,t.build.outDir);o.sourceFilesDir=o.sourceFilesDir||n;["accessKey","secretKey","bucket","path"].forEach((e=>{o[e]||(console.log(` 插件 参数${e} 必须填写`),o.enable=!1)}))},closeBundle(){if(o.enable){let e=getFilePaths(o.sourceFilesDir),t={};e.forEach((e=>{t[e.name]=e})),new QiniuPlugin(Object.assign(Object.assign({},o),{assets:t})).uploadFiles()}else console.log("已禁用 可设置enable: true 开启")}}};
//# sourceMappingURL=index.cjs.js.map
